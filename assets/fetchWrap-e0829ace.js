import{S as v,C as w,a6 as y,a7 as m,a as h,o as O,c as i,b as P,d,e as T}from"./index-52d7a35b.js";import{a as A,N as o}from"./assistantAppsApiService-e5e6b9f4.js";import{g as b}from"./manageAppService-96566b5b.js";var D=Object.defineProperty,I=Object.getOwnPropertyDescriptor,j=(e,t,s,r)=>{for(var a=r>1?void 0:r?I(t,s):t,n=e.length-1,c;n>=0;n--)(c=e[n])&&(a=(r?c(t,s,a):c(a))||a);return r&&a&&D(t,s,a),a};let f=class{_getLanguagesCache;_controller;constructor(){this._controller=()=>A().getAuthedApi().language}create(e){return this._controller().create(e)}read(e){throw new Error("ManageLanguageService: Method not implemented.")}async readAll(e){const t=await this._controller().readAll();return t.isSuccess&&(this._getLanguagesCache={expiredAfter:y(new Date,1e3),value:t.value}),t}async readAllCached(e){return this._getLanguagesCache!=null&&m(new Date,this._getLanguagesCache.expiredAfter)?{isSuccess:!0,value:this._getLanguagesCache.value,errorMessage:""}:await this.readAll(e)}update(e){return this._controller().update(e)}del(e){return this._controller().del(e.guid)}};f=j([v()],f);const R=()=>w.get(f);var E=Object.defineProperty,$=Object.getOwnPropertyDescriptor,x=(e,t,s,r)=>{for(var a=r>1?void 0:r?$(t,s):t,n=e.length-1,c;n>=0;n--)(c=e[n])&&(a=(r?c(t,s,a):c(a))||a);return r&&a&&E(t,s,a),a};let p=class{_controller;constructor(){this._controller=()=>A().getAuthedApi().translationImage}add(e,t,s){return this._controller().add(e,t,s)}readAll(e){return this._controller().readAll(e)}del(e){return this._controller().del(e.guid)}};p=x([v()],p);const S=()=>w.get(p);var N=Object.defineProperty,F=Object.getOwnPropertyDescriptor,B=(e,t,s,r)=>{for(var a=r>1?void 0:r?F(t,s):t,n=e.length-1,c;n>=0;n--)(c=e[n])&&(a=(r?c(t,s,a):c(a))||a);return r&&a&&N(t,s,a),a};let _=class{_getTransKeysCache;_controller;constructor(){this._controller=()=>A().getAuthedApi().translationKey}async create(e){const{translationKeyImages:t,...s}=e,r=await this._controller().create(s);if(r.isSuccess==!1)return r;const a=S();for(const n of t??[])await a.add(r.value,n.name??"unknown",n.contents);return r}read(e){throw new Error("ManageTranslationKeysService: Method not implemented.")}async readAll(e){const t=await this._controller().readAll();return t.isSuccess&&(this._getTransKeysCache={expiredAfter:y(new Date,1e3),value:t.value}),t}async readAllCached(e){return this._getTransKeysCache!=null&&m(new Date,this._getTransKeysCache.expiredAfter)?{isSuccess:!0,value:this._getTransKeysCache.value,errorMessage:""}:await this.readAll(e)}async update(e){const{translationKeyImages:t,...s}=e,r=await this._controller().update(s);if(r.isSuccess==!1)return r;const a=S();for(const n of t??[])await a.add(s.guid,n.name??"unknown",n.contents);return r}del(e){return this._controller().del(e.guid)}};_=B([v()],_);const q=()=>w.get(_),J=e=>{const[t,s]=h([]),[r,a]=h([]),[n,c]=h([]),[u,g]=h(o.Loading);O(()=>{C()});const C=async()=>{const l=[];e.fetchApps&&l.push(K()),e.fetchLanguages&&l.push(L()),e.fetchTranslationKeys&&l.push(M()),await Promise.all(l),g(o.Success)},K=async()=>{const l=await b().readAllCached();l.isSuccess==!1&&g(o.Error),s(l.value)},L=async()=>{const l=await R().readAllCached();l.isSuccess==!1&&g(o.Error),a(l.value)},M=async()=>{const l=await q().readAllCached();l.isSuccess==!1&&g(o.Error),c(l.value)};return[i(d,{get when(){return u()==o.Loading||u()==o.Pending},get children(){return i(P,{})}}),i(d,{get when(){return u()==o.Error},get children(){return i(T,{children:"Error"})}}),i(d,{get when(){return u()==o.Success},get children(){return e.render(t(),r(),n())}})]};export{J as F,S as a,q as b,R as g};
