import{a as h,o as w,c as r,T as m,d as c,L as f,S,C as R,n as d,g as M}from"./index-749dd1b4.js";import{g as b,F as C}from"./fetchWrap-6d747562.js";import{N as s,B as T,g as x,A as g,a as A,b as y}from"./baseCrudService-e1262d7f.js";import{M as F,c as L}from"./manageResourceBasePage-24e44793.js";import{c as k}from"./stringHelper-1c926dc7.js";import"./manageAppService-c7c2d748.js";import"./popupHelper-65454df4.js";const P=e=>{const[n,i]=h(e.langsFromApi??[]),[t,a]=h(e.langsFromApi!=null?s.Success:s.Loading);w(()=>{e.langsFromApi!=null&&e.langsFromApi.length>0||l()});const l=async()=>{const o=await b().readAllCached();o.isSuccess==!1&&a(s.Error),i(o.value),a(s.Success)};return[r(c,{get when(){return t()==s.Error},get children(){return r(m,{children:"Something went wrong"})}}),r(c,{get when(){return t()==s.Loading||t()==s.Pending},get children(){return r(f,{})}}),r(c,{get when(){return t()==s.Success},get children(){return r(m,{get children(){return(n()??[]).find(o=>o.guid==e.languageGuid)?.name??"unknown"}})}})]};var v=(e=>(e[e.pending=0]="pending",e[e.closed=1]="closed",e[e.resolved=2]="resolved",e))(v||{}),E=Object.defineProperty,G=Object.getOwnPropertyDescriptor,_=(e,n,i,t)=>{for(var a=t>1?void 0:t?G(n,i):n,l=e.length-1,o;l>=0;l--)(o=e[l])&&(a=(t?o(n,i,a):o(a))||a);return t&&a&&E(n,i,a),a};let p=class extends T{constructor(){const e=x();super(e.getAssistantAppsUrl())}async create(e){throw new Error("ManageTranslationReportService: Method not implemented.")}read(e){throw new Error("ManageTranslationReportService: Method not implemented.")}async readAll(e){return this.get(g.translationReport,A)}update(e){throw new Error("ManageTranslationReportService: Method not implemented.")}del(e){const n=`${g.translationReport}/${e.guid}`;return this.delete(n,A)}markAsResolved(e){return this.put(`${g.translationReport}/${e}`,y)}markAsClosed(e){return this.delete(`${g.translationReport}/${e}`)}};p=_([S()],p);const u=()=>R.get(p),I=()=>r(C,{fetchApps:!0,fetchLanguages:!0,render:(e,n,i)=>r(F,{title:"Manage TranslationReports",itemName:"Translation Report",disableEditAction:!0,disableDeleteAction:!0,disableGetByIdOption:!0,get crudService(){return u()},tableHeadItems:[{title:"Language"},{title:"Date submitted",maxWidth:"75px",textAlign:"center"},{title:"Reason"},{title:"Status"}],tableRowRender:t=>[r(d,{get children(){return r(P,{get languageGuid(){return t.languageGuid},langsFromApi:n})}}),r(d,{maxWidth:"75px",margin:"0 auto",textAlign:"center",get children(){return M(t.dateSubmitted)}}),r(d,{get children(){return r(m,{class:"clamp-to-2-lines",get children(){return t.reason}})}}),r(d,{get children(){return k(v[t.status])}})],actionsPerRow:[{emoji:"📝",label:"Copy Translation Guid",order:3,onClick:t=>L(t.translationGuid)},{emoji:"❌",label:"Mark as closed (do nothing)",order:8,onClick:t=>u().markAsClosed(t.guid)},{emoji:"🚮",label:"Resolve automatically (delete with all votes)",order:9,onClick:t=>u().markAsResolved(t.guid)}],propToFormMappings:[]})});export{I as ManageTranslationReportsPage,I as default};
